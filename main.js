(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>u});var i=t(537),o=t.n(i),r=t(645),a=t.n(r),A=t(667),s=t.n(A),c=new URL(t(335),t.b),l=new URL(t(448),t.b),d=a()(o()),p=s()(c),m=s()(l);d.push([n.id,":root {\n  --border-color: rgba(0, 0, 0, .3);\n}\n\n@font-face {\n  font-family: 'Roboto';\n  src: url("+p+") format('truetype');\n}\n\nbody {\n  margin: 0;\n  font-family: 'Roboto';\n  min-height: 100vh;\n  background: url("+m+");\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n}\n\n#content {\n  min-width: 700px;\n}\n\n#container {\n  display: grid;\n  grid-template-columns: 1.4fr 2fr 1.4fr;\n  grid-template-rows: 2fr 1fr;\n  height: 100%;\n  gap: 10px;\n  padding: 10px;\n}\n\n#location-panel,\n#temperature-panel,\n#stats-panel {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n  gap: 1em;\n}\n\n/* LOCATION PANEL */\n#location-panel {\n  border-right: 1px solid var(--border-color);\n}\n\n#city {\n  font-size: 2.5em;\n}\n\n#today-date,\n#today-time {\n  font-weight: bold;\n}\n\n#search-panel {\n  display: flex;\n  align-items: center;\n}\n\n#search-input {\n  outline: none;\n  width: 10em;\n  border: 0;\n  border-bottom: 3px solid black;\n  background-color: rgba(255, 255, 255, 0);\n  font-size: 1.5em;\n}\n\n#search-icon {\n  cursor: pointer;\n}\n\n#search-icon:hover,\nsearch-icon:active {\n  transform: scale(.9);\n}\n\n#gif {\n  max-width: 90%;\n  max-height: 150px;\n  margin: 10px;\n}\n\n/* TEMPERATURE PANEL */\n#temperature-panel {\n  border-right: 1px solid var(--border-color);\n}\n\n#description {\n  font-size: 2.5em;\n  font-weight: bold;\n}\n\n#description-panel {\n  display: flex;\n  align-items: center;\n  gap: 3em;\n}\n\n#temperature {\n  font-size: 4em;\n  font-weight: bold;\n}\n\n#scale {\n  display: flex;\n  gap: 1em;\n}\n\n#scaleF,\n#scaleC {\n  width: 1.5em;\n  min-width: 1.5em;\n  height: 1.5em;\n  min-height: 1.5em;\n  background-color: rgba(255, 255, 255, 0);\n  font-size: 3em;\n  outline: none;\n  border: 0;\n}\n\n#scaleC.clicked,\n#scaleF.clicked {\n  border: 3px solid black;\n  border-radius: 10px;\n}\n\n#scaleF:hover,\n#scaleC:hover {\n  cursor: pointer;\n  font-weight: bold;\n  transform: scale(.9);\n}\n\n/* STATS PANEL */\n#feels-like,\n#wind-speed,\n#pressure,\n#humidity {\n  display: grid;\n  grid-template-columns: 3em 1fr;\n  grid-template-rows: 1fr 1fr;\n  gap: .2em;\n  align-items: center;\n  border-bottom: 1px solid var(--border-color);\n}\n\n#humidity {\n  border-bottom: 0;\n}\n\n#feels-like-icon,\n#wind-speed-icon,\n#pressure-icon,\n#humidity-icon {\n  grid-row: 1 / 3;\n}\n\n#feels-like-value,\n#wind-speed-value,\n#pressure-value,\n#humidity-value {\n  font-size: 1.5em;\n}\n\n/* WEEK PANEL */\n#week-panel {\n  display: flex;\n  grid-column: 1 / 4;\n  height: 100%;\n  width: 100%;\n  gap: 2.5em;\n  color: white;\n  padding: 1em;\n  border-top: 1px solid rgba(255, 255, 255, .6);\n  justify-content: center;\n  padding-top: 2em;\n}\n\n.day-container {\n  display: flex;\n  flex-direction: column;\n  gap: 1em;\n}\n\n.day {\n  font-weight: bold;\n}\n\n.day-temperature {\n  font-size: 1.5em;\n  font-weight: bold;\n}\n\n.day-icon {\n  width: min-content;\n  background-color: gray;\n}\n\n@media only screen and (max-width: 800px) {\n  #container {\n      grid-template-rows: 1fr 1fr;\n  }\n\n  #week-panel {\n    flex-direction: column;\n    gap: .1em;\n    padding-top: .2em;\n  }\n\n  .day-container {\n    flex-direction: row;\n    align-items: center;\n  }\n\n  .day-temperature {\n    font-size: 1.2em;\n  }\n\n  .day-icon {\n    transform: scale(.6);\n  }\n\n  #stats-panel {\n    display: none;\n  }\n\n  #temperature-panel {\n    grid-column: 2 / 4;    \n  }\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,iCAAiC;AACnC;;AAEA;EACE,qBAAqB;EACrB,+DAAiD;AACnD;;AAEA;EACE,SAAS;EACT,qBAAqB;EACrB,iBAAiB;EACjB,mDAAyD;EACzD,sBAAsB;EACtB,4BAA4B;EAC5B,2BAA2B;AAC7B;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,sCAAsC;EACtC,2BAA2B;EAC3B,YAAY;EACZ,SAAS;EACT,aAAa;AACf;;AAEA;;;EAGE,aAAa;EACb,sBAAsB;EACtB,YAAY;EACZ,WAAW;EACX,QAAQ;AACV;;AAEA,mBAAmB;AACnB;EACE,2CAA2C;AAC7C;;AAEA;EACE,gBAAgB;AAClB;;AAEA;;EAEE,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,WAAW;EACX,SAAS;EACT,8BAA8B;EAC9B,wCAAwC;EACxC,gBAAgB;AAClB;;AAEA;EACE,eAAe;AACjB;;AAEA;;EAEE,oBAAoB;AACtB;;AAEA;EACE,cAAc;EACd,iBAAiB;EACjB,YAAY;AACd;;AAEA,sBAAsB;AACtB;EACE,2CAA2C;AAC7C;;AAEA;EACE,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,QAAQ;AACV;;AAEA;EACE,cAAc;EACd,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,QAAQ;AACV;;AAEA;;EAEE,YAAY;EACZ,gBAAgB;EAChB,aAAa;EACb,iBAAiB;EACjB,wCAAwC;EACxC,cAAc;EACd,aAAa;EACb,SAAS;AACX;;AAEA;;EAEE,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;;EAEE,eAAe;EACf,iBAAiB;EACjB,oBAAoB;AACtB;;AAEA,gBAAgB;AAChB;;;;EAIE,aAAa;EACb,8BAA8B;EAC9B,2BAA2B;EAC3B,SAAS;EACT,mBAAmB;EACnB,4CAA4C;AAC9C;;AAEA;EACE,gBAAgB;AAClB;;AAEA;;;;EAIE,eAAe;AACjB;;AAEA;;;;EAIE,gBAAgB;AAClB;;AAEA,eAAe;AACf;EACE,aAAa;EACb,kBAAkB;EAClB,YAAY;EACZ,WAAW;EACX,UAAU;EACV,YAAY;EACZ,YAAY;EACZ,6CAA6C;EAC7C,uBAAuB;EACvB,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,QAAQ;AACV;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;EAClB,sBAAsB;AACxB;;AAEA;EACE;MACI,2BAA2B;EAC/B;;EAEA;IACE,sBAAsB;IACtB,SAAS;IACT,iBAAiB;EACnB;;EAEA;IACE,mBAAmB;IACnB,mBAAmB;EACrB;;EAEA;IACE,gBAAgB;EAClB;;EAEA;IACE,oBAAoB;EACtB;;EAEA;IACE,aAAa;EACf;;EAEA;IACE,kBAAkB;EACpB;AACF",sourcesContent:[":root {\n  --border-color: rgba(0, 0, 0, .3);\n}\n\n@font-face {\n  font-family: 'Roboto';\n  src: url('./fonts/Roboto.ttf') format('truetype');\n}\n\nbody {\n  margin: 0;\n  font-family: 'Roboto';\n  min-height: 100vh;\n  background: url('./images/mountains-ga923d27b0_1280.png');\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n}\n\n#content {\n  min-width: 700px;\n}\n\n#container {\n  display: grid;\n  grid-template-columns: 1.4fr 2fr 1.4fr;\n  grid-template-rows: 2fr 1fr;\n  height: 100%;\n  gap: 10px;\n  padding: 10px;\n}\n\n#location-panel,\n#temperature-panel,\n#stats-panel {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n  gap: 1em;\n}\n\n/* LOCATION PANEL */\n#location-panel {\n  border-right: 1px solid var(--border-color);\n}\n\n#city {\n  font-size: 2.5em;\n}\n\n#today-date,\n#today-time {\n  font-weight: bold;\n}\n\n#search-panel {\n  display: flex;\n  align-items: center;\n}\n\n#search-input {\n  outline: none;\n  width: 10em;\n  border: 0;\n  border-bottom: 3px solid black;\n  background-color: rgba(255, 255, 255, 0);\n  font-size: 1.5em;\n}\n\n#search-icon {\n  cursor: pointer;\n}\n\n#search-icon:hover,\nsearch-icon:active {\n  transform: scale(.9);\n}\n\n#gif {\n  max-width: 90%;\n  max-height: 150px;\n  margin: 10px;\n}\n\n/* TEMPERATURE PANEL */\n#temperature-panel {\n  border-right: 1px solid var(--border-color);\n}\n\n#description {\n  font-size: 2.5em;\n  font-weight: bold;\n}\n\n#description-panel {\n  display: flex;\n  align-items: center;\n  gap: 3em;\n}\n\n#temperature {\n  font-size: 4em;\n  font-weight: bold;\n}\n\n#scale {\n  display: flex;\n  gap: 1em;\n}\n\n#scaleF,\n#scaleC {\n  width: 1.5em;\n  min-width: 1.5em;\n  height: 1.5em;\n  min-height: 1.5em;\n  background-color: rgba(255, 255, 255, 0);\n  font-size: 3em;\n  outline: none;\n  border: 0;\n}\n\n#scaleC.clicked,\n#scaleF.clicked {\n  border: 3px solid black;\n  border-radius: 10px;\n}\n\n#scaleF:hover,\n#scaleC:hover {\n  cursor: pointer;\n  font-weight: bold;\n  transform: scale(.9);\n}\n\n/* STATS PANEL */\n#feels-like,\n#wind-speed,\n#pressure,\n#humidity {\n  display: grid;\n  grid-template-columns: 3em 1fr;\n  grid-template-rows: 1fr 1fr;\n  gap: .2em;\n  align-items: center;\n  border-bottom: 1px solid var(--border-color);\n}\n\n#humidity {\n  border-bottom: 0;\n}\n\n#feels-like-icon,\n#wind-speed-icon,\n#pressure-icon,\n#humidity-icon {\n  grid-row: 1 / 3;\n}\n\n#feels-like-value,\n#wind-speed-value,\n#pressure-value,\n#humidity-value {\n  font-size: 1.5em;\n}\n\n/* WEEK PANEL */\n#week-panel {\n  display: flex;\n  grid-column: 1 / 4;\n  height: 100%;\n  width: 100%;\n  gap: 2.5em;\n  color: white;\n  padding: 1em;\n  border-top: 1px solid rgba(255, 255, 255, .6);\n  justify-content: center;\n  padding-top: 2em;\n}\n\n.day-container {\n  display: flex;\n  flex-direction: column;\n  gap: 1em;\n}\n\n.day {\n  font-weight: bold;\n}\n\n.day-temperature {\n  font-size: 1.5em;\n  font-weight: bold;\n}\n\n.day-icon {\n  width: min-content;\n  background-color: gray;\n}\n\n@media only screen and (max-width: 800px) {\n  #container {\n      grid-template-rows: 1fr 1fr;\n  }\n\n  #week-panel {\n    flex-direction: column;\n    gap: .1em;\n    padding-top: .2em;\n  }\n\n  .day-container {\n    flex-direction: row;\n    align-items: center;\n  }\n\n  .day-temperature {\n    font-size: 1.2em;\n  }\n\n  .day-icon {\n    transform: scale(.6);\n  }\n\n  #stats-panel {\n    display: none;\n  }\n\n  #temperature-panel {\n    grid-column: 2 / 4;    \n  }\n}\n"],sourceRoot:""}]);const u=d},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",i=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),i&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),i&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,i,o,r){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(i)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(a[s]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);i&&a[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),r="/*# ".concat(o," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([r]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,i=0;i<e.length;i++)if(e[i].identifier===n){t=i;break}return t}function i(n,i){for(var r={},a=[],A=0;A<n.length;A++){var s=n[A],c=i.base?s[0]+i.base:s[0],l=r[c]||0,d="".concat(c," ").concat(l);r[c]=l+1;var p=t(d),m={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(m);else{var u=o(m,i);i.byIndex=A,e.splice(A,0,{identifier:d,updater:u,references:1})}a.push(d)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var r=i(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<r.length;a++){var A=t(r[a]);e[A].references--}for(var s=i(n,o),c=0;c<r.length;c++){var l=t(r[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}r=s}}},569:n=>{var e={};n.exports=function(n,t){var i=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var i="";t.supports&&(i+="@supports (".concat(t.supports,") {")),t.media&&(i+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(i+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),i+=t.css,o&&(i+="}"),t.media&&(i+="}"),t.supports&&(i+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(i,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},335:(n,e,t)=>{n.exports=t.p+"fc2b5060f7accec5cf74.ttf"},448:(n,e,t)=>{n.exports=t.p+"0f7e6387f289c9615ac0.png"}},e={};function t(i){var o=e[i];if(void 0!==o)return o.exports;var r=e[i]={id:i,exports:{}};return n[i](r,r.exports,t),r.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var i in e)t.o(e,i)&&!t.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:e[i]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var i=e.getElementsByTagName("script");i.length&&(n=i[i.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),i=t(795),o=t.n(i),r=t(569),a=t.n(r),A=t(565),s=t.n(A),c=t(216),l=t.n(c),d=t(589),p=t.n(d),m=t(426),u={};u.styleTagTransform=p(),u.setAttributes=s(),u.insert=a().bind(null,"head"),u.domAPI=o(),u.insertStyleElement=l(),e()(m.Z,u),m.Z&&m.Z.locals&&m.Z.locals;const f=t.p+"bc85925b0a50fbd399ba.png",C=t.p+"f2c36767b1d685bcffd6.png",E=t.p+"420e2edf83e21c689b83.png",g=t.p+"9affbeb9714cb05e15ac.png",h=t.p+"585ab42b5fb92d7b65f1.png";function b(n,e,t="div"){const i=document.createElement(t);return i.id=e,n.appendChild(i)}const B=b(document.getElementById("content"),"container"),y=b(B,"location-panel"),v=b(B,"temperature-panel"),w=b(B,"stats-panel"),x=b(B,"week-panel"),k=b(y,"city"),S=b(y,"today-date"),I=b(y,"today-time"),T=b(y,"search-panel"),L=b(T,"search-input","input");L.placeholder="New York";const $=b(T,"search-icon"),N=new Image;N.src=f,$.appendChild(N);const P=b(y,"gif","img"),z=b(v,"description-panel"),j=b(z,"description"),R=b(z,"weather-icon"),F=b(v,"temperature"),Y=b(v,"scale"),M=b(Y,"scaleF","button");M.textContent="°F";const U=b(Y,"scaleC","button");U.textContent="°C",U.className="clicked";const Z=b(w,"feels-like"),D=b(Z,"feels-like-icon"),O=new Image;O.src=C,D.appendChild(O),b(Z,"feels-like-label").textContent="Feels Like";const Q=b(Z,"feels-like-value"),W=b(w,"wind-speed"),_=b(W,"wind-speed-icon"),q=new Image;q.src=E,_.appendChild(q),b(W,"wind-speed-label").textContent="Wind Speed";const V=b(W,"wind-speed-value"),H=b(w,"pressure"),K=b(H,"pressure-icon"),X=new Image;X.src=g,K.appendChild(X),b(H,"pressure-label").textContent="Pressure";const J=b(H,"pressure-value"),G=b(w,"humidity"),nn=b(G,"humidity-icon"),en=new Image;en.src=h,nn.appendChild(en),b(G,"humidity-label").textContent="Humidity";const tn=b(G,"humidity-value");function on(n,e,t="div"){const i=document.createElement(t);return i.className=e,n.appendChild(i)}function rn(n){return Math.round(n-273.15)}function an(n){return Math.round(1.8*rn(n)+32)}const An=new Image;let sn=[];async function cn(n){fetch(`https://api.giphy.com/v1/gifs/translate?api_key=W7cKIBKFMbbAP5dAAkviacBwQNLWQZR6&s=${n}`,{mode:"cors"}).then((n=>n.json())).then((n=>{P.src=n.data.images.original.url}))}async function ln(n){try{const e=await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${n}&APPID=48f6a27fca74b448539664c245fa0a54`,{mode:"cors"}),t=await e.json(),i=await fetch(`https://openweathermap.org/img/wn/${t.weather[0].icon}@2x.png`,{mode:"cors"});k.textContent=t.name;const o=function(n){const e=new Date,t=60*e.getTimezoneOffset()+n;return e.setSeconds(e.getSeconds()+t),{date:`${e.toLocaleString("default",{weekday:"long"})}, ${e.toLocaleString("default",{month:"long"})} ${e.getDate()}, ${e.getFullYear()}`,time:`${e.getHours()}:${e.getMinutes().toString().padStart(2,"0")}`}}(t.timezone);S.textContent=o.date,I.textContent=o.time,j.textContent=t.weather[0].description,An.src=i.url,R.appendChild(An),F.textContent=`${rn(t.main.temp)}°C`,Q.textContent=`${rn(t.main.feels_like)}°C`,V.textContent=`${t.wind.speed} km/h`,J.textContent=`${t.main.pressure} hPa`,tn.textContent=`${t.main.humidity}%`;const r=await fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${n}&APPID=48f6a27fca74b448539664c245fa0a54`,{mode:"cors"}),a=await r.json(),A=a.list.find((n=>"12"===n.dt_txt.substring(11,13))),s=a.list.indexOf(A);sn=[a.list[s],a.list[s+8],a.list[s+16],a.list[s+24],a.list[s+32]],sn.forEach((async n=>{const e=on(x,"day-container");on(e,"day").textContent=n.dt_txt;const t=on(e,"day-temperature");t.textContent=`${rn(n.main.temp)}°C`,t.dataset.temp=n.main.temp,on(e,"day-description").textContent=n.weather[0].description;const i=await fetch(`http://openweathermap.org/img/wn/${n.weather[0].icon}@2x.png`,{mode:"cors"}),o=new Image;o.className="day-icon",o.src=i.url,e.appendChild(o)}));const c=document.querySelectorAll(".day-temperature");M.addEventListener("click",(()=>{F.textContent=`${an(t.main.temp)}°F`,Q.textContent=`${an(t.main.feels_like)}°F`,c.forEach((n=>{n.textContent=`${an(n.dataset.temp)}°F`})),M.className="clicked",U.classList.remove("clicked")})),U.addEventListener("click",(()=>{F.textContent=`${rn(t.main.temp)}°C`,Q.textContent=`${rn(t.main.feels_like)}°C`,c.forEach((n=>{n.textContent=`${rn(n.dataset.temp)}°C`})),U.className="clicked",M.classList.remove("clicked")})),"hidden"===v.style.visibility&&(v.style.visibility="visible"),"hidden"===w.style.visibility&&(w.style.visibility="visible"),"hidden"===x.style.visibility&&(x.style.visibility="visible"),"hidden"===P.style.visibility&&(P.style.visibility="visible")}catch(n){k.textContent="",S.textContent="Location not found.",I.textContent="Try again.",L.value="",P.style.visibility="hidden",v.style.visibility="hidden",w.style.visibility="hidden",x.style.visibility="hidden"}}$.addEventListener("click",(()=>{""!==L.value&&(x.replaceChildren(),cn(L.value),ln(L.value))})),cn("New York"),ln("New York")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,